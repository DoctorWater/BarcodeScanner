@page "/"


@using BarcodeDecodeFrontend.Data.Services.Interfaces
@using BarcodeDecodeFrontend.Data.Services.Messaging
@inject IBarcodeDecoder Decoder;
@inject IVideoProcessor VideoProcessor;
@inject BarcodeMessagePublisher BarcodePublisher;

<div class="container">
    <div class="row">
        <div class="@(_recognizedImageBarcodes.Count > 0 ? "col-md-5 border-end" : "col-md-12") ">
            <h3>Загрузка изображения или видео</h3>
            <div class=" control-group">
                <InputFile class="form-control restricted-width" OnChange="LoadFiles" multiple/>
            </div>
        </div>

        @if (_recognizedImageBarcodes.Count > 0)
        {
            <div class="col-md-5 ms-5">
                <h3>Проверьте корректность</h3>
                @foreach (var barcode in _recognizedImageBarcodes)
                {
                    var element = _recognizedImageBarcodes.First(x => x == barcode);
                    <div class="input-group mb-2">
                        <EditForm Model="element">
                            <div class="d-flex align-items-center gap-2">
                                <InputText @bind-Value="@element.Barcode" class="form-control" />
                                <button class="btn btn-danger" type="button" @onclick="(() => RemoveBarcode(barcode))">
                                    &#x2715;
                                </button>
                            </div>
                        </EditForm>
                    </div>
                }
                <input class="btn-primary btn mt-2" type="button" @onclick="@OnBarcodeSubmit" value="Submit"/>
            </div>
        }
        @if (_foundTsu.Any() || _foundOrders.Any())
        {
        <div class="row mt-3">
            @foreach (var tsu in _foundTsu)
            {
            <div class="mt-2">
                <OneLinePresentation Order="tsu.TransportOrder" Tsu="tsu"></OneLinePresentation>
            </div>
            }
            @foreach (var order in _foundOrders.Where(order => _foundTsu.Select(t => t.TransportOrder?.ExternalId ?? "NULL").Contains(order.ExternalId) is false))
            {
            <div class="mt-2">
                <OneLinePresentation Order="order" Tsu="@null"></OneLinePresentation>
            </div>
            }
        </div>
        }
        else if (_hasSearched)
        {
        <div class="row mt-3">
            <p>No result found.</p>
        </div>
        }
    </div>
</div>